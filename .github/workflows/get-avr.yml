name: Build AVR GCC

on:
  push:
  workflow_dispatch:

jobs:
  build-avr-gcc:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: |
         ls
         python3 get_avr_gcc.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: toolchain-avr-gcc
          path: toolchain-avr-gcc.tar.bz2

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./toolchain-avr-gcc.tar.bz2
          asset_name: toolchain-avr-gcc.tar.bz2
          asset_content_type: application/x-bzip2